{"version":3,"sources":["drag.js","swipe.js","touch.js","transform.js","mobile-angular-ui.gestures.js"],"names":["angular","module","provider","this","$get","$touch","$transform","style","document","createElement","appendChild","createTextNode","head","sheet","insertRule","NULL_TRANSFORM","element","transform","TRANSLATE_BOTH","touch","translateX","distanceX","translateY","distanceY","TRANSLATE_HORIZONTAL","TRANSLATE_UP","TRANSLATE_DOWN","TRANSLATE_LEFT","TRANSLATE_RIGHT","TRANSLATE_VERTICAL","TRANSLATE_INSIDE","wrapperElementOrRectangle","length","tx","ty","re","getBoundingClientRect","rw","Element","width","right","stepX","left","height","bottom","stepY","top","bind","$element","dragOptions","touchOptions","tS","rS","startEventHandler","start","endEventHandler","end","moveEventHandler","move","cancelEventHandler","cancel","transformEventHandler","domElement","tO","get","rO","moving","isMoving","cleanup","removeClass","reset","set","undo","setup","addClass","createDragInfo","extend","originalTransform","originalRect","startRect","rect","startTransform","onTouchMove","event","preventDefault","onTouchEnd","__UiSwipeHandled__","onTouchCancel","factory","VELOCITY_THRESHOLD","MOVEMENT_THRESHOLD","TURNAROUND_MAX","ANGLE_THRESHOLD","abs","Math","defaultOptions","movementThreshold","valid","t","absAngle","angle","validDistance","total","distance","validAngle","validVelocity","averageVelocity","eventHandlers","options","forEach","prefix","direction","directiveName","directive","$swipe","$parse","link","scope","elem","attrs","onSwipe","swipe","toUpperCase","$apply","VALID","POINTER_EVENTS","mouse","POINTER_TYPES","SENSITIVE_AREA","ownerDocument","documentElement","setPointerEvents","pointerEvents","Object","keys","setValid","fn","setMovementThreshold","v","setSensitiveArea","fnOrElementOrRect","atan2","sqrt","getCoordinates","touches","e","changedTouches","originalEvent","x","clientX","y","clientY","getEvents","pointerTypes","eventType","res","pointerType","eventName","push","join","now","Date","timediff","t1","t2","len","buildTouchInfo","type","c","t0","tl","ts","ts0","timestamp","tsl","x0","y0","xl","yl","totalXl","totalX","totalYl","totalY","duration","durationl","dxl","dyl","dl","dx","dy","d","tv","dir","PI","startX","startY","prevX","prevY","step","velocity","isValid","undefined","sensitiveArea","startEvents","endEvents","moveEvents","cancelEvents","$movementTarget","resetTouch","off","isActive","Boolean","onTouchStart","on","coords","mva","mvaRect","cancelable","setTimeout","cssPrefix","transformProperty","styleProperty","prefixes","i","toLowerCase","getElementTransformProperty","tr","window","getComputedStyle","getPropertyValue","setElementTransformProperty","value","SMALL_NUMBER","rad2deg","asin","cos","floor","cloneMatrix","m","j","determinant2x2","a","b","determinant3x3","a1","a2","a3","b1","b2","b3","c1","c2","c3","determinant4x4","d1","d2","d3","a4","b4","c4","d4","adjoint","inverse","det","transposeMatrix4","v4MulPointByMatrix","p","v3Length","v3Scale","desiredLength","l","v3Dot","v3Combine","ascl","bscl","v3Cross","decompose","mat","result","localMatrix","perspectiveMatrix","rightHandSide","inversePerspectiveMatrix","transposedInversePerspectiveMatrix","perspectivePoint","perspectiveX","perspectiveY","perspectiveZ","perspectiveW","translateZ","pdum3","row","scaleX","skewXY","scaleY","skewXZ","skewYZ","scaleZ","rotateY","rotateX","rotateZ","fCom","n","def","val","String","toFixed","fPx","fDeg","fromCssMatrix","M","elems","split","map","Number","match","col","toCss","perspective","translate","scale","rotation","skew","str"],"mappings":"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","file":"mobile-angular-ui.gestures.min.js","sourcesContent":["/**\r\n * @module mobile-angular-ui.gestures.drag\r\n * @description\r\n *\r\n * `mobile-angular-ui.gestures.drag` module exposes the `$drag` service that is used\r\n * to handle drag gestures. `$drag` service wraps [$touch](../module:touch) service adding\r\n * CSS transforms reacting to `touchmove` events.\r\n *\r\n * ## Usage\r\n *\r\n * ``` js\r\n * angular.module('myApp', ['mobile-angular-ui.gestures']);\r\n * ```\r\n *\r\n * Or\r\n *\r\n * ``` js\r\n * angular.module('myApp', ['mobile-angular-ui.gestures.drag']);\r\n * ```\r\n *\r\n * ``` js\r\n * var dragOptions = {\r\n *   transform: $drag.TRANSLATE_BOTH,\r\n *   start:  function(dragInfo, event){},\r\n *   end:    function(dragInfo, event){},\r\n *   move:   function(dragInfo, event){},\r\n *   cancel: function(dragInfo, event){}\r\n * };\r\n *\r\n * $drag.bind(element, dragOptions, touchOptions);\r\n * ```\r\n *\r\n * Where:\r\n *\r\n * - `transform` is a `function(element, currentTransform, touch) -> newTransform`\r\n *    returning taking an `element`, its `currentTransform` and returning the `newTransform`\r\n *    for the element in response to `touch`. See [$transform](../module:transform) for more.\r\n *    Default to `$drag.TRANSLATE_BOTH`.\r\n * - `start`, `end`, `move`, `cancel` are optional callbacks responding to `drag` movement phases.\r\n * - `dragInfo` is an extended version of `touchInfo` from [$touch](../module:touch),\r\n *   extending it with:\r\n *   - `originalTransform`: The [$transform](../module:transform) object relative to CSS transform before `$drag` is bound.\r\n *   - `originalRect`: The [Bounding Client Rect](https://developer.mozilla.org/en-US/docs/Web/API/Element.getBoundingClientRect)\r\n *   for bound element before any drag action.\r\n *   - `startRect`: The [Bounding Client Rect](https://developer.mozilla.org/en-US/docs/Web/API/Element.getBoundingClientRect)\r\n *   for bound element registered at `start` event.\r\n *   - `startTransform`: The [$transform](../module:transform) at `start` event.\r\n *   - `rect`: The current [Bounding Client Rect](https://developer.mozilla.org/en-US/docs/Web/API/Element.getBoundingClientRect) for bound element.\r\n *   - `transform`: The current [$transform](../module:transform).\r\n *   - `reset`: A function restoring element to `originalTransform`.\r\n *   - `undo`: A function restoring element to `startTransform`.\r\n * - `touchOptions` is an option object to be passed to underlying [`$touch`](../module:touch) service.\r\n *\r\n * ### Predefined transforms\r\n *\r\n * - `$drag.NULL_TRANSFORM`: No transform follow movement\r\n * - `$drag.TRANSLATE_BOTH`: Transform translate following movement on both x and y axis.\r\n * - `$drag.TRANSLATE_HORIZONTAL`: Transform translate following movement on x axis.\r\n * - `$drag.TRANSLATE_UP`: Transform translate following movement on negative y axis.\r\n * - `$drag.TRANSLATE_DOWN`: Transform translate following movement on positive y axis.\r\n * - `$drag.TRANSLATE_LEFT`: Transform translate following movement on negative x axis.\r\n * - `$drag.TRANSLATE_RIGHT`: Transform translate following movement on positive x axis.\r\n * - `$drag.TRANSLATE_VERTICAL`: Transform translate following movement on y axis.\r\n * - `$drag.TRANSLATE_INSIDE`: Is a function and should be used like:\r\n *\r\n *    ``` js\r\n *     {\r\n *       transform: $drag.TRANSLATE_INSIDE(myElement)\r\n *     }\r\n *    ```\r\n *\r\n *    It returns a transform function that contains translate movement inside\r\n *    the passed element.\r\n *\r\n * ### `.ui-drag-move` style\r\n *\r\n * While moving an `.ui-drag-move` class is attached to element. Style for this class is defined via\r\n * [insertRule](https://developer.mozilla.org/en-US/docs/Web/API/CSSStyleSheet.insertRule) and aims to\r\n * fix common problems while dragging, specifically:\r\n *\r\n * - Brings the element in front of other elements\r\n * - Disable transitions\r\n * - Makes text unselectable\r\n *\r\n * **NOTE** Transitions are disabled cause they may introduce conflicts between `transition: transform`\r\n *  and `dragOptions.transform` function.\r\n *\r\n * They will be re-enabled after drag, and this can be used to achieve some graceful effects.\r\n *\r\n * If you need transition that does not involve transforms during movement you can apply them to an\r\n * inner or wrapping element.\r\n *\r\n * ### Examples\r\n *\r\n * #### Limit movement to an element\r\n *\r\n * ``` js\r\n * app.directive('dragMe', ['$drag', function($drag){\r\n *   return {\r\n *     controller: function($scope, $element) {\r\n *       $drag.bind($element,\r\n *         {\r\n *           transform: $drag.TRANSLATE_INSIDE($element.parent()),\r\n *           end: function(drag) {\r\n *             drag.reset();\r\n *           }\r\n *         },\r\n *         { // release touch when movement is outside bounduaries\r\n *           sensitiveArea: $element.parent()\r\n *         }\r\n *       );\r\n *     }\r\n *   };\r\n * }]);\r\n * ```\r\n * <iframe class='embedded-example' src='/examples/drag.html'></iframe>\r\n */\r\n(function() {\r\n  'use strict';\r\n\r\n  angular.module('mobile-angular-ui.gestures.drag', [\r\n    'mobile-angular-ui.gestures.touch',\r\n    'mobile-angular-ui.gestures.transform'\r\n  ])\r\n\r\n    .provider('$drag', function() {\r\n      this.$get = ['$touch', '$transform', function($touch, $transform) {\r\n\r\n      // Add some css rules to be used while moving elements\r\n        var style = document.createElement('style');\r\n        style.appendChild(document.createTextNode(''));\r\n        document.head.appendChild(style);\r\n        var sheet = style.sheet;\r\n\r\n      // Makes z-index 99999\r\n        sheet.insertRule('html .ui-drag-move{z-index: 99999 !important;}', 0);\r\n      // Disable transitions\r\n        sheet.insertRule('html .ui-drag-move{' +\r\n        '-webkit-transition: none !important;' +\r\n        '-moz-transition: none !important;-o-transition: none !important;' +\r\n        '-ms-transition: none !important;transition: none !important;' +\r\n        '}', 0);\r\n\r\n      // Makes text unselectable\r\n        sheet.insertRule('html .ui-drag-move, html .ui-drag-move *{' +\r\n        '-webkit-touch-callout: none !important;' +\r\n        '-webkit-user-select: none !important;' +\r\n        '-khtml-user-select: none !important;' +\r\n        '-moz-user-select: none !important;' +\r\n        '-ms-user-select: none !important;' +\r\n        'user-select: none !important;' +\r\n      '}', 0);\r\n\r\n        style = sheet = null;   // we wont use them anymore so make\r\n      // their memory immediately claimable\r\n\r\n        return {\r\n\r\n        //\r\n        // built-in transforms\r\n        //\r\n          NULL_TRANSFORM: function(element, transform) {\r\n            return transform;\r\n          },\r\n\r\n          TRANSLATE_BOTH: function(element, transform, touch) {\r\n            transform.translateX = touch.distanceX;\r\n            transform.translateY = touch.distanceY;\r\n            return transform;\r\n          },\r\n\r\n          TRANSLATE_HORIZONTAL: function(element, transform, touch) {\r\n            transform.translateX = touch.distanceX;\r\n            transform.translateY = 0;\r\n            return transform;\r\n          },\r\n\r\n          TRANSLATE_UP: function(element, transform, touch) {\r\n            transform.translateY = touch.distanceY <= 0 ? touch.distanceY : 0;\r\n            transform.translateX = 0;\r\n            return transform;\r\n          },\r\n\r\n          TRANSLATE_DOWN: function(element, transform, touch) {\r\n            transform.translateY = touch.distanceY >= 0 ? touch.distanceY : 0;\r\n            transform.translateX = 0;\r\n            return transform;\r\n          },\r\n\r\n          TRANSLATE_LEFT: function(element, transform, touch) {\r\n            transform.translateX = touch.distanceX <= 0 ? touch.distanceX : 0;\r\n            transform.translateY = 0;\r\n            return transform;\r\n          },\r\n\r\n          TRANSLATE_RIGHT: function(element, transform, touch) {\r\n            transform.translateX = touch.distanceX >= 0 ? touch.distanceX : 0;\r\n            transform.translateY = 0;\r\n            return transform;\r\n          },\r\n\r\n          TRANSLATE_VERTICAL: function(element, transform, touch) {\r\n            transform.translateX = 0;\r\n            transform.translateY = touch.distanceY;\r\n            return transform;\r\n          },\r\n\r\n          TRANSLATE_INSIDE: function(wrapperElementOrRectangle) {\r\n            wrapperElementOrRectangle = wrapperElementOrRectangle.length ? wrapperElementOrRectangle[0] : wrapperElementOrRectangle;\r\n\r\n            return function(element, transform, touch) {\r\n              element = element.length ? element[0] : element;\r\n              var re = element.getBoundingClientRect();\r\n              var rw = wrapperElementOrRectangle instanceof Element ? wrapperElementOrRectangle.getBoundingClientRect() : wrapperElementOrRectangle;\r\n              var tx;\r\n              var ty;\r\n\r\n              if (re.width >= rw.width) {\r\n                tx = 0;\r\n              } else if (re.right + touch.stepX > rw.right) {\r\n                tx = rw.right - re.right;\r\n              } else if (re.left + touch.stepX < rw.left) {\r\n                tx = rw.left - re.left;\r\n              } else {\r\n                tx = touch.stepX;\r\n              }\r\n\r\n              if (re.height >= rw.height) {\r\n                ty = 0;\r\n              } else if (re.bottom + touch.stepY > rw.bottom) {\r\n                ty = rw.bottom - re.bottom;\r\n              } else if (re.top + touch.stepY < rw.top) {\r\n                ty = rw.top - re.top;\r\n              } else {\r\n                ty = touch.stepY;\r\n              }\r\n\r\n              transform.translateX += tx;\r\n              transform.translateY += ty;\r\n              return transform;\r\n            };\r\n          },\r\n\r\n        //\r\n        // bind function\r\n        //\r\n          bind: function($element, dragOptions, touchOptions) {\r\n            $element = angular.element($element);\r\n            dragOptions = dragOptions || {};\r\n            touchOptions = touchOptions || {};\r\n\r\n            var startEventHandler = dragOptions.start;\r\n            var endEventHandler = dragOptions.end;\r\n            var moveEventHandler = dragOptions.move;\r\n            var cancelEventHandler = dragOptions.cancel;\r\n            var transformEventHandler = dragOptions.transform || this.TRANSLATE_BOTH;\r\n\r\n            var domElement = $element[0];\r\n            var tO = $transform.get($element); // original transform\r\n            var rO = domElement.getBoundingClientRect(); // original bounding rect\r\n            var tS; // transform at start\r\n            var rS;\r\n\r\n            var moving = false;\r\n\r\n            var isMoving = function() {\r\n              return moving;\r\n            };\r\n\r\n            var cleanup = function() {\r\n              moving = false;\r\n              tS = rS = null;\r\n              $element.removeClass('ui-drag-move');\r\n            };\r\n\r\n            var reset = function() {\r\n              $transform.set(domElement, tO);\r\n            };\r\n\r\n            var undo = function() {\r\n              $transform.set(domElement, tS || tO);\r\n            };\r\n\r\n            var setup = function() {\r\n              moving = true;\r\n              rS = domElement.getBoundingClientRect();\r\n              tS = $transform.get(domElement);\r\n              $element.addClass('ui-drag-move');\r\n            };\r\n\r\n            var createDragInfo = function(touch) {\r\n              touch = angular.extend({}, touch);\r\n              touch.originalTransform = tO;\r\n              touch.originalRect = rO;\r\n              touch.startRect = rS;\r\n              touch.rect = domElement.getBoundingClientRect();\r\n              touch.startTransform = tS;\r\n              touch.transform = $transform.get(domElement);\r\n              touch.reset = reset;\r\n              touch.undo = undo;\r\n              return touch;\r\n            };\r\n\r\n            var onTouchMove = function(touch, event) {\r\n              // preventDefault no matter what\r\n              // it is (ie. maybe html5 drag for images or scroll)\r\n              event.preventDefault();\r\n\r\n              // $touch calls start on the first touch\r\n              // to ensure $drag.start is called only while actually\r\n              // dragging and not for touches we will bind $drag.start\r\n              // to the first time move is called\r\n\r\n              if (isMoving()) { // drag move\r\n                touch = createDragInfo(touch);\r\n\r\n                var transform = transformEventHandler($element, angular.extend({}, touch.transform), touch, event);\r\n\r\n                $transform.set(domElement, transform);\r\n\r\n                if (moveEventHandler) {\r\n                  moveEventHandler(touch, event);\r\n                }\r\n              } else { // drag start\r\n                setup();\r\n                if (startEventHandler) {\r\n                  startEventHandler(createDragInfo(touch), event);\r\n                }\r\n              }\r\n            };\r\n\r\n            var onTouchEnd = function(touch, event) {\r\n              if (!isMoving()) {\r\n                return;\r\n              }\r\n\r\n              // prevents outer swipes\r\n              event.__UiSwipeHandled__ = true;\r\n\r\n              touch = createDragInfo(touch);\r\n              cleanup();\r\n\r\n              if (endEventHandler) {\r\n                endEventHandler(touch, event);\r\n              }\r\n            };\r\n\r\n            var onTouchCancel = function(touch, event) {\r\n              if (!isMoving()) {\r\n                return;\r\n              }\r\n\r\n              touch = createDragInfo(touch);\r\n              undo(); // on cancel movement is undoed automatically;\r\n              cleanup();\r\n\r\n              if (cancelEventHandler) {\r\n                cancelEventHandler(touch, event);\r\n              }\r\n            };\r\n\r\n            return $touch.bind($element,\r\n            {move: onTouchMove, end: onTouchEnd, cancel: onTouchCancel},\r\n            touchOptions);\r\n          } // ~ bind\r\n        }; // ~ return $drag\r\n      }]; // ~ $get\r\n    });\r\n\r\n})();\r\n","/**\r\n * A module providing swipe gesture services and directives.\r\n *\r\n * @module mobile-angular-ui.gestures.swipe\r\n */\r\n(function() {\r\n  'use strict';\r\n\r\n  var module = angular.module('mobile-angular-ui.gestures.swipe',\r\n    ['mobile-angular-ui.gestures.touch']);\r\n\r\n  /**\r\n   * An adaptation of `ngTouch.$swipe`, it is basically the same despite of:\r\n   *\r\n   * - It is based on [$touch](../module:touch)\r\n   * - Swipes are recognized by touch velocity and direction\r\n   * - It does not require `ngTouch` thus is better compatible with fastclick.js\r\n   * - Swipe directives are nestable\r\n   * - It allows to unbind\r\n   * - It has only one difference in interface, and its about how to pass `pointerTypes`:\r\n   *\r\n   *   ``` js\r\n   *     // ngTouch.$swipe\r\n   *     $swipe.bind(..., ['mouse', ... });\r\n   *\r\n   *     // mobile-angular-ui.gestures.swipe.$swipe\r\n   *     $swipe.bind(..., pointerTypes: { mouse: { start: 'mousedown', ...} });\r\n   *   ```\r\n   *   This is due to the fact that the second parameter of `$swipe.bind` is destinated to options for\r\n   *   underlying `$touch` service.\r\n   *\r\n   * @service $swipe\r\n   * @as class\r\n   */\r\n  module.factory('$swipe', ['$touch', function($touch) {\r\n    var VELOCITY_THRESHOLD = 500; // px/sec\r\n    var MOVEMENT_THRESHOLD = 10; // px\r\n    var TURNAROUND_MAX = 10; // px\r\n    var ANGLE_THRESHOLD = 10; // deg\r\n    var abs = Math.abs;\r\n\r\n    var defaultOptions = {\r\n      movementThreshold: MOVEMENT_THRESHOLD, // start to consider only if movement\r\n      // exceeded MOVEMENT_THRESHOLD\r\n      valid: function(t) {\r\n        var absAngle = abs(t.angle);\r\n        absAngle = absAngle >= 90 ? absAngle - 90 : absAngle;\r\n\r\n        var validDistance = t.total - t.distance <= TURNAROUND_MAX;\r\n        var validAngle = absAngle <= ANGLE_THRESHOLD || absAngle >= 90 - ANGLE_THRESHOLD;\r\n        var validVelocity = t.averageVelocity >= VELOCITY_THRESHOLD;\r\n\r\n        return validDistance && validAngle && validVelocity;\r\n      }\r\n    };\r\n\r\n    return {\r\n      /**\r\n       * Bind swipe gesture handlers for an element.\r\n       *\r\n       * ``` js\r\n       * var unbind = $swipe.bind(elem, {\r\n       *   end: function(touch) {\r\n       *     console.log('Swiped:', touch.direction);\r\n       *     unbind();\r\n       *   }\r\n       * });\r\n       * ```\r\n       *\r\n       * **Swipes Detection**\r\n       *\r\n       * Before consider a touch to be a swipe Mobile Angular UI verifies that:\r\n       *\r\n       * 1. Movement is quick. Average touch velocity should exceed a `VELOCITY_THRESHOLD`.\r\n       * 2. Movement is linear.\r\n       * 3. Movement has a clear, non-ambiguous direction. So we can assume without error\r\n       *    that underlying `touch.direction` is exactly the swipe direction. For that\r\n       *    movement is checked against an `ANGLE_THRESHOLD`.\r\n       *\r\n       * @param  {Element|$element} element The element to observe for swipe gestures.\r\n       * @param  {object} eventHandlers An object with handlers for specific swipe events.\r\n       * @param  {function} [eventHandlers.start]  The callback for swipe start event.\r\n       * @param  {function} [eventHandlers.end]  The callback for swipe end event.\r\n       * @param  {function} [eventHandlers.move]  The callback for swipe move event.\r\n       * @param  {function} [eventHandlers.cancel]  The callback for swipe cancel event.\r\n       * @param  {object} [options] Options to be passed to underlying [$touch.bind](../module:touch) function.\r\n       *\r\n       * @returns {function} The unbind function.\r\n       *\r\n       * @method bind\r\n       * @memberOf mobile-angular-ui.gestures.swipe~$swipe\r\n       */\r\n      bind: function(element, eventHandlers, options) {\r\n        options = angular.extend({}, defaultOptions, options || {});\r\n        return $touch.bind(element, eventHandlers, options);\r\n      }\r\n    };\r\n  }]);\r\n\r\n  /**\r\n   * Specify custom behavior when an element is swiped to the left on a touchscreen device.\r\n   * A leftward swipe is a quick, right-to-left slide of the finger.\r\n   *\r\n   * @directive uiSwipeLeft\r\n   * @param {expression} uiSwipeLeft An expression to be evaluated on leftward swipe.\r\n   */\r\n  /**\r\n   * Specify custom behavior when an element is swiped to the right on a touchscreen device.\r\n   * A rightward swipe is a quick, left-to-right slide of the finger.\r\n   *\r\n   * @directive uiSwipeRight\r\n   * @param {expression} uiSwipeRight An expression to be evaluated on rightward swipe.\r\n   */\r\n  /**\r\n   * Alias for [uiSwipeLeft](#uiswipeleft).\r\n   *\r\n   * @directive ngSwipeLeft\r\n   * @deprecated\r\n   */\r\n  /**\r\n   * Alias for [uiSwipeRight](#uiswiperight).\r\n   *\r\n   * @directive ngSwipeRight\r\n   * @deprecated\r\n   */\r\n  angular.forEach(['ui', 'ng'], function(prefix) {\r\n    angular.forEach(['Left', 'Right'], function(direction) {\r\n      var directiveName = prefix + 'Swipe' + direction;\r\n      module.directive(directiveName, ['$swipe', '$parse', function($swipe, $parse) {\r\n        return {\r\n          link: function(scope, elem, attrs) {\r\n            var onSwipe = $parse(attrs[directiveName]);\r\n            $swipe.bind(elem, {\r\n              end: function(swipe, event) {\r\n                if (swipe.direction === direction.toUpperCase()) {\r\n                  if (!event.__UiSwipeHandled__) {\r\n                    event.__UiSwipeHandled__ = true;\r\n                    scope.$apply(function() {\r\n                      onSwipe(scope, {$touch: swipe});\r\n                    });\r\n                  }\r\n                }\r\n              }\r\n            });\r\n          }\r\n        };\r\n      }]);\r\n    });\r\n  });\r\n})();\r\n","/* eslint complexity: 0 */\r\n\r\n/**\r\n * Device agnostic touch handling.\r\n *\r\n * **Usage**\r\n *\r\n * Require this module doing either\r\n *\r\n * ``` js\r\n * angular.module('myApp', ['mobile-angular-ui.gestures']);\r\n * ```\r\n *\r\n * Or standalone\r\n *\r\n * ``` js\r\n * angular.module('myApp', ['mobile-angular-ui.gestures.touch']);\r\n * ```\r\n *\r\n * Then you will be able to use the `$touch` service like that:\r\n *\r\n * ``` js\r\n * var unbindFn = $touch.bind(element, {\r\n *    start: function(touchInfo, e);\r\n *    move: function(touchInfo, e);\r\n *    end: function(touchInfo, e);\r\n *    cancel: function(touchInfo, e);\r\n * }, options);\r\n * ```\r\n *\r\n * @module mobile-angular-ui.gestures.touch\r\n */\r\n(function() {\r\n  'use strict';\r\n  var module = angular.module('mobile-angular-ui.gestures.touch', []);\r\n\r\n  /**\r\n   * `$touch` is an abstraction of touch event handling that works with\r\n   * any kind of input devices.\r\n   *\r\n   * It is intended for single touch only and provides\r\n   * extended infos about touch like: movement, direction, velocity, duration, and more.\r\n   * $touch service is intended as base to build any single-touch gesture handlers.\r\n   *\r\n   * **Usage**\r\n   *\r\n   * ``` js\r\n   * var unbindFn = $touch.bind(element, {\r\n   *    start: function(touchInfo, e);\r\n   *    move: function(touchInfo, e);\r\n   *    end: function(touchInfo, e);\r\n   *    cancel: function(touchInfo, e);\r\n   * }, options);\r\n   * ```\r\n   *\r\n   * @service $touch\r\n   * @as class\r\n   */\r\n\r\n  /**\r\n   * Configurable provider for `$touch` service\r\n   * @class  $touchProvider\r\n   * @ngdoc  provider\r\n   * @memberOf mobile-angular-ui.gestures.touch~$touch\r\n   */\r\n  module.provider('$touch', function() {\r\n\r\n    /* =====================================\r\n    =            Configuration            =\r\n    =====================================*/\r\n\r\n    var VALID = function() {\r\n      return true;\r\n    };\r\n\r\n    var MOVEMENT_THRESHOLD = 1;\r\n\r\n    var POINTER_EVENTS = {\r\n      mouse: {\r\n        start: 'mousedown',\r\n        move: 'mousemove',\r\n        end: 'mouseup'\r\n      },\r\n      touch: {\r\n        start: 'touchstart',\r\n        move: 'touchmove',\r\n        end: 'touchend',\r\n        cancel: 'touchcancel'\r\n      }\r\n    };\r\n\r\n    var POINTER_TYPES = ['mouse', 'touch'];\r\n\r\n    // function or element or rect\r\n    var SENSITIVE_AREA = function($element) {\r\n      return $element[0].ownerDocument.documentElement.getBoundingClientRect();\r\n    };\r\n\r\n    /**\r\n     * Set default pointer events option.\r\n     * Pointer Events option specifies a device-by-device map between device specific events and\r\n     * touch events.\r\n     *\r\n     * The default Pointer Events Map is defined as:\r\n     *\r\n     * ``` js\r\n     * var POINTER_EVENTS = {\r\n     *   'mouse': {\r\n     *     start: 'mousedown',\r\n     *     move: 'mousemove',\r\n     *     end: 'mouseup'\r\n     *   },\r\n     *   'touch': {\r\n     *     start: 'touchstart',\r\n     *     move: 'touchmove',\r\n     *     end: 'touchend',\r\n     *     cancel: 'touchcancel'\r\n     *   }\r\n     * };\r\n     * ```\r\n     *\r\n     * Ie.\r\n     *\r\n     * ```\r\n     * app.config(function($touchProvider){\r\n     *   $touchProvider.setPointerEvents({ pen: {start: \"pendown\", end: \"penup\", move: \"penmove\" }});\r\n     * });\r\n     * ```\r\n     *\r\n     * @name setPointerEvents\r\n     * @param {object} pointerEvents The pointer events map object\r\n     * @memberOf mobile-angular-ui.gestures.touch~$touch.$touchProvider\r\n     */\r\n    this.setPointerEvents = function(pointerEvents) {\r\n      POINTER_EVENTS = pointerEvents;\r\n      POINTER_TYPES = Object.keys(POINTER_EVENTS);\r\n    };\r\n\r\n    /**\r\n     * Set default validity function for a touch.\r\n     *\r\n     * The default is defined as always true:\r\n     *\r\n     * ``` js\r\n     * $touchProvider.setValid(function(touch, event) {\r\n     *   return true;\r\n     * });\r\n     * ```\r\n     *\r\n     * @param {function} validityFunction The validity function. A function that takes two\r\n     *                   arguments: `touchInfo` and `event`, and returns\r\n     *                   a `Boolean` indicating wether the corresponding touch\r\n     *                   should be considered valid and its handlers triggered,\r\n     *                   or considered invalid and its handlers be ignored.\r\n     * @method setValid\r\n     * @memberOf mobile-angular-ui.gestures.touch~$touch.$touchProvider\r\n     */\r\n    this.setValid = function(fn) {\r\n      VALID = fn;\r\n    };\r\n\r\n    /**\r\n     * Set default amount of pixels of movement before\r\n     * start to trigger `touchmove` handlers.\r\n     *\r\n     * Default is `1`.\r\n     *\r\n     * ie.\r\n     *\r\n     * ``` js\r\n     * $touchProvider.setMovementThreshold(120);\r\n     * ```\r\n     *\r\n     * @param {integer}  threshold The new treeshold.\r\n     *\r\n     * @method  setMovementThreshold\r\n     * @memberOf mobile-angular-ui.gestures.touch~$touch.$touchProvider\r\n     */\r\n    this.setMovementThreshold = function(v) {\r\n      MOVEMENT_THRESHOLD = v;\r\n    };\r\n    /**\r\n     * Set default sensitive area.\r\n     *\r\n     * The sensitive area of a touch is the area of the screen inside what\r\n     * we consider a touch to be meaningful thus triggering its handlers.\r\n     *\r\n     * **NOTE:** if movement goes out the sensitive area the touch event is not cancelled,\r\n     * instead its handler are just ignored.\r\n     *\r\n     * By default sensitive area is defined as `ownerDocument` bounding rectangle\r\n     * of the bound element.\r\n     *\r\n     * ie.\r\n     *\r\n     * ``` js\r\n     * $touchProvider.setSensitiveArea(function($element) {\r\n     *   return $element[0].ownerDocument.documentElement.getBoundingClientRect();\r\n     * });\r\n     * ```\r\n     *\r\n     * @param {function|Element|TextRectangle} sensitiveArea The new default sensitive area,\r\n     *                                                       either static or as function\r\n     *                                                       taking an element and returning another\r\n     *                                                       element or a\r\n     *                                                       [rectangle](https://developer.mozilla.org/en-US/docs/Web/API/Element.getBoundingClientRect).\r\n     *\r\n     * @method  setSensitiveArea\r\n     * @memberOf mobile-angular-ui.gestures.touch~$touch.$touchProvider\r\n     */\r\n    this.setSensitiveArea = function(fnOrElementOrRect) {\r\n      SENSITIVE_AREA = fnOrElementOrRect;\r\n    };\r\n\r\n    //\r\n    // Shorthands for minification\r\n    //\r\n    var abs = Math.abs;\r\n    var atan2 = Math.atan2;\r\n    var sqrt = Math.sqrt;\r\n\r\n    /* ===============================\r\n    =            Helpers            =\r\n    ===============================*/\r\n\r\n    var getCoordinates = function(event) {\r\n      var touches = event.touches && event.touches.length ? event.touches : [event];\r\n      var e = (event.changedTouches && event.changedTouches[0]) ||\r\n          (event.originalEvent && event.originalEvent.changedTouches &&\r\n              event.originalEvent.changedTouches[0]) ||\r\n          touches[0].originalEvent || touches[0];\r\n\r\n      return {\r\n        x: e.clientX,\r\n        y: e.clientY\r\n      };\r\n    };\r\n\r\n    var getEvents = function(pointerTypes, eventType) {\r\n      var res = [];\r\n      angular.forEach(pointerTypes, function(pointerType) {\r\n        var eventName = POINTER_EVENTS[pointerType][eventType];\r\n        if (eventName) {\r\n          res.push(eventName);\r\n        }\r\n      });\r\n      return res.join(' ');\r\n    };\r\n\r\n    var now = function() {\r\n      return new Date();\r\n    };\r\n\r\n    var timediff = function(t1, t2) {\r\n      t2 = t2 || now();\r\n      return abs(t2 - t1);\r\n    };\r\n\r\n    var len = function(x, y) {\r\n      return sqrt(x * x + y * y);\r\n    };\r\n\r\n    /**\r\n     * `TouchInfo` is an object containing the following extended informations about any touch\r\n     * event.\r\n     *\r\n     * @property {string} type Normalized event type. Despite of pointer device is always one of `touchstart`, `touchend`, `touchmove`, `touchcancel`.\r\n     * @property {Date} timestamp The time object corresponding to the moment this touch event happened.\r\n     * @property {integer} duration The difference between this touch event and the corresponding `touchstart`.\r\n     * @property {float} startX X coord of related `touchstart`.\r\n     * @property {float} startY Y coord of related `touchstart`.\r\n     * @property {float} prevX X coord of previous `touchstart` or `touchmove`.\r\n     * @property {float} prevY Y coord of previous `touchstart` or `touchmove`.\r\n     * @property {float} x X coord of this touch event.\r\n     * @property {float} y Y coord of this touch event.\r\n     * @property {float} step Distance between `[prevX, prevY]` and `[x, y]` points.\r\n     * @property {float} stepX Distance between `prevX` and `x`.\r\n     * @property {float} stepY Distance between `prevY` and `y`.\r\n     * @property {float} velocity Instantaneous velocity of a touch event in pixels per second.\r\n     * @property {float} averageVelocity Average velocity of a touch event from its corresponding `touchstart` in pixels per second.\r\n     * @property {float} distance Distance between `[startX, startY]` and `[x, y]` points.\r\n     * @property {float} distanceX Distance between `startX` and `x`.\r\n     * @property {float} distanceY Distance between `startY` and `y`.\r\n     * @property {float} total Total number of pixels covered by movement, taking account of direction changes and turnarounds.\r\n     * @property {float} totalX Total number of pixels covered by horizontal movement, taking account of direction changes and turnarounds.\r\n     * @property {float} totalY Total number of pixels covered by vertical, taking account of direction changes and turnarounds.\r\n     * @property {string} direction The current prevalent direction for this touch, one of `LEFT`, `RIGHT`, `TOP`, `BOTTOM`.\r\n     * @property {float} angle Angle in degree between x axis and the vector `[x, y]`, is `null` when no movement happens.\r\n     *\r\n     * @class TouchInfo\r\n     * @ngdoc type\r\n     * @memberOf mobile-angular-ui.gestures.touch~$touch\r\n     */\r\n\r\n    var buildTouchInfo = function(type, c, t0, tl) {\r\n      // Compute values for new TouchInfo based on coordinates and previus touches.\r\n      // - c is coords of new touch\r\n      // - t0 is first touch: useful to compute duration and distance (how far pointer\r\n      //                    got from first touch)\r\n      // - tl is last touch: useful to compute velocity and length (total length of the movement)\r\n\r\n      t0 = t0 || {};\r\n      tl = tl || {};\r\n\r\n      // timestamps\r\n      var ts = now();\r\n      var ts0 = t0.timestamp || ts;\r\n      var tsl = tl.timestamp || ts0;\r\n\r\n      // coords\r\n      var x = c.x;\r\n      var y = c.y;\r\n      var x0 = t0.x || x;\r\n      var y0 = t0.y || y;\r\n      var xl = tl.x || x0;\r\n      var yl = tl.y || y0;\r\n\r\n      // total movement\r\n      var totalXl = tl.totalX || 0;\r\n      var totalYl = tl.totalY || 0;\r\n      var totalX = totalXl + abs(x - xl);\r\n      var totalY = totalYl + abs(y - yl);\r\n      var total = len(totalX, totalY);\r\n\r\n      // duration\r\n      var duration = timediff(ts, ts0);\r\n      var durationl = timediff(ts, tsl);\r\n\r\n      // distance\r\n      var dxl = x - xl;\r\n      var dyl = y - yl;\r\n      var dl = len(dxl, dyl);\r\n      var dx = x - x0;\r\n      var dy = y - y0;\r\n      var d = len(dx, dy);\r\n\r\n      // velocity (px per second)\r\n      var v = durationl > 0 ? abs(dl / (durationl / 1000)) : 0;\r\n      var tv = duration > 0 ? abs(total / (duration / 1000)) : 0;\r\n\r\n      // main direction: 'LEFT', 'RIGHT', 'TOP', 'BOTTOM'\r\n      var dir = abs(dx) > abs(dy) ?\r\n        (dx < 0 ? 'LEFT' : 'RIGHT') :\r\n        (dy < 0 ? 'TOP' : 'BOTTOM');\r\n\r\n      // angle (angle between distance vector and x axis)\r\n      // angle will be:\r\n      //   0 for x > 0 and y = 0\r\n      //   90 for y < 0 and x = 0\r\n      //   180 for x < 0 and y = 0\r\n      //   -90 for y > 0 and x = 0\r\n      //\r\n      //               -90°\r\n      //                |\r\n      //                |\r\n      //                |\r\n      //   180° --------|-------- 0°\r\n      //                |\r\n      //                |\r\n      //                |\r\n      //               90°\r\n      //\r\n      var angle = dx !== 0 || dy !== 0 ? atan2(dy, dx) * (180 / Math.PI) : null;\r\n      angle = angle === -180 ? 180 : angle;\r\n\r\n      return {\r\n        type: type,\r\n        timestamp: ts,\r\n        duration: duration,\r\n        startX: x0,\r\n        startY: y0,\r\n        prevX: xl,\r\n        prevY: yl,\r\n        x: c.x,\r\n        y: c.y,\r\n\r\n        step: dl, // distance from prev\r\n        stepX: dxl,\r\n        stepY: dyl,\r\n\r\n        velocity: v,\r\n        averageVelocity: tv,\r\n\r\n        distance: d, // distance from start\r\n        distanceX: dx,\r\n        distanceY: dy,\r\n\r\n        total: total, // total length of momement,\r\n        // considering turnaround\r\n        totalX: totalX,\r\n        totalY: totalY,\r\n        direction: dir,\r\n        angle: angle\r\n      };\r\n    };\r\n\r\n    /* ======================================\r\n    =            Factory Method            =\r\n    ======================================*/\r\n\r\n    this.$get = [function() {\r\n\r\n      return {\r\n        /**\r\n         *\r\n         * Bind touch handlers for an element.\r\n         *\r\n         * ``` js\r\n         * var unbind = $touch.bind(elem, {\r\n         *   end: function(touch) {\r\n         *     console.log('Avg Speed:', touch.averageVelocity);\r\n         *     unbind();\r\n         *   }\r\n         * });\r\n         * ```\r\n         *\r\n         * @param  {Element|$element} element The element to bound to.\r\n         * @param  {object} eventHandlers An object with handlers for specific touch events.\r\n         * @param  {function} [eventHandlers.start]  The callback for `touchstart` event.\r\n         * @param  {function} [eventHandlers.end]  The callback for `touchend` event.\r\n         * @param  {function} [eventHandlers.move]  The callback for `touchmove` event.\r\n         * @param  {function} [eventHandlers.cancel]  The callback for `touchcancel` event.\r\n         * @param  {object} [options] Options.\r\n         * @param  {integer} [options.movementThreshold] Amount of pixels of movement before start to trigger `touchmove` handlers.\r\n         * @param  {function} [options.valid] Validity function. A `function(TouchInfo, event)⟶boolean` deciding if a touch should be handled or ignored.\r\n         * @param  {function|Element|TextRectangle} [options.sensitiveArea] A\r\n         * [Bounding Client Rect](https://developer.mozilla.org/en-US/docs/Web/API/Element.getBoundingClientRect) or an element\r\n         *  or a function that takes the bound element and returns one of the previous.\r\n         *  Sensitive area define bounduaries to release touch when movement is outside.\r\n         * @param  {array} [options.pointerTypes] Pointer types to handle. An array of pointer types that is intended to be\r\n         *                                        a subset of keys from default pointer events map (see `$touchProvider.setPointerEvents`).\r\n         *\r\n         * @returns {function} The unbind function.\r\n         *\r\n         * @memberOf mobile-angular-ui.gestures.touch~$touch\r\n         */\r\n        bind: function($element, eventHandlers, options) {\r\n\r\n          // ensure element to be an angular element\r\n          $element = angular.element($element);\r\n\r\n          options = options || {};\r\n          // uses default pointer types in case of none passed\r\n          var pointerTypes = options.pointerTypes || POINTER_TYPES;\r\n          var isValid = options.valid === undefined ? VALID : options.valid;\r\n          var movementThreshold = options.movementThreshold === undefined ? MOVEMENT_THRESHOLD : options.movementThreshold;\r\n          var sensitiveArea = options.sensitiveArea === undefined ? SENSITIVE_AREA : options.sensitiveArea;\r\n\r\n          // first and last touch\r\n          var t0;\r\n          var tl;\r\n\r\n          // events\r\n          var startEvents = getEvents(pointerTypes, 'start');\r\n          var endEvents = getEvents(pointerTypes, 'end');\r\n          var moveEvents = getEvents(pointerTypes, 'move');\r\n          var cancelEvents = getEvents(pointerTypes, 'cancel');\r\n\r\n          var startEventHandler = eventHandlers.start;\r\n          var endEventHandler = eventHandlers.end;\r\n          var moveEventHandler = eventHandlers.move;\r\n          var cancelEventHandler = eventHandlers.cancel;\r\n\r\n          var $movementTarget = angular.element($element[0].ownerDocument);\r\n          var onTouchMove;\r\n          var onTouchEnd;\r\n          var onTouchCancel;\r\n\r\n          var resetTouch = function() {\r\n            t0 = tl = null;\r\n            $movementTarget.off(moveEvents, onTouchMove);\r\n            $movementTarget.off(endEvents, onTouchEnd);\r\n            if (cancelEvents) {\r\n              $movementTarget.off(cancelEvents, onTouchCancel);\r\n            }\r\n          };\r\n\r\n          var isActive = function() {\r\n            return Boolean(t0);\r\n          };\r\n\r\n          //\r\n          // Callbacks\r\n          //\r\n\r\n          // on touchstart\r\n          var onTouchStart = function(event) {\r\n            // don't handle multi-touch\r\n            if (event.touches && event.touches.length > 1) {\r\n              return;\r\n            }\r\n            tl = t0 = buildTouchInfo('touchstart', getCoordinates(event));\r\n            $movementTarget.on(moveEvents, onTouchMove);\r\n            $movementTarget.on(endEvents, onTouchEnd);\r\n            if (cancelEvents) {\r\n              $movementTarget.on(cancelEvents, onTouchCancel);\r\n            }\r\n            if (startEventHandler) {\r\n              startEventHandler(t0, event);\r\n            }\r\n          };\r\n\r\n          // on touchCancel\r\n          onTouchCancel = function(event) {\r\n            var t = buildTouchInfo('touchcancel', getCoordinates(event), t0, tl);\r\n            resetTouch();\r\n            if (cancelEventHandler) {\r\n              cancelEventHandler(t, event);\r\n            }\r\n          };\r\n\r\n          // on touchMove\r\n          onTouchMove = function(event) {\r\n            // don't handle multi-touch\r\n            if (event.touches && event.touches.length > 1) {\r\n              return;\r\n            }\r\n\r\n            if (!isActive()) {\r\n              return;\r\n            }\r\n\r\n            var coords = getCoordinates(event);\r\n\r\n            //\r\n            // wont fire outside sensitive area\r\n            //\r\n            var mva = typeof sensitiveArea === 'function' ? sensitiveArea($element) : sensitiveArea;\r\n            mva = mva.length ? mva[0] : mva;\r\n\r\n            var mvaRect = mva instanceof Element ? mva.getBoundingClientRect() : mva;\r\n\r\n            if (coords.x < mvaRect.left || coords.x > mvaRect.right || coords.y < mvaRect.top || coords.y > mvaRect.bottom) {\r\n              return;\r\n            }\r\n\r\n            var t = buildTouchInfo('touchmove', coords, t0, tl);\r\n            var totalX = t.totalX;\r\n            var totalY = t.totalY;\r\n\r\n            tl = t;\r\n\r\n            if (totalX < movementThreshold && totalY < movementThreshold) {\r\n              return;\r\n            }\r\n\r\n            if (isValid(t, event)) {\r\n              if (event.cancelable === undefined || event.cancelable) {\r\n                event.preventDefault();\r\n              }\r\n              if (moveEventHandler) {\r\n                moveEventHandler(t, event);\r\n              }\r\n            }\r\n          };\r\n\r\n          // on touchEnd\r\n          onTouchEnd = function(event) {\r\n            // don't handle multi-touch\r\n            if (event.touches && event.touches.length > 1) {\r\n              return;\r\n            }\r\n\r\n            if (!isActive()) {\r\n              return;\r\n            }\r\n\r\n            var t = angular.extend({}, tl, {type: 'touchend'});\r\n            if (isValid(t, event)) {\r\n              if (event.cancelable === undefined || event.cancelable) {\r\n                event.preventDefault();\r\n              }\r\n              if (endEventHandler) {\r\n                setTimeout(function() { // weird workaround to avoid\r\n                  // delays with dom manipulations\r\n                  // inside the handler\r\n                  endEventHandler(t, event);\r\n                }, 0);\r\n              }\r\n            }\r\n            resetTouch();\r\n          };\r\n\r\n          $element.on(startEvents, onTouchStart);\r\n\r\n          return function unbind() {\r\n            if ($element) { // <- wont throw if accidentally called twice\r\n              $element.off(startEvents, onTouchStart);\r\n              if (cancelEvents) {\r\n                $movementTarget.off(cancelEvents, onTouchCancel);\r\n              }\r\n              $movementTarget.off(moveEvents, onTouchMove);\r\n              $movementTarget.off(endEvents, onTouchEnd);\r\n\r\n              // Clear all those variables we carried out from `#bind` method scope\r\n              // to local scope and that we don't have to use anymore\r\n              $element = $movementTarget = startEvents = cancelEvents =\r\n                moveEvents = endEvents = onTouchStart = onTouchCancel =\r\n                onTouchMove = onTouchEnd = pointerTypes = isValid =\r\n                movementThreshold = sensitiveArea = null;\r\n            }\r\n          };\r\n        }\r\n      };\r\n    }];\r\n  });\r\n})();\r\n","/* eslint complexity: 0 */\r\n\r\n/**\r\n * @module mobile-angular-ui.gestures.transform\r\n * @description\r\n *\r\n * `mobile-angular-ui.gestures.transform` provides the `$transform` service is designed\r\n * with the specific aim to provide a cross-browser way to interpolate CSS 3d transform\r\n * without having to deal with CSS Matrix, and being able to take into account any previous\r\n * unknown transform already applied to an element.\r\n *\r\n * ## Usage\r\n *\r\n * Require this module doing either\r\n *\r\n * ``` js\r\n * angular.module('myApp', ['mobile-angular-ui.gestures']);\r\n * ```\r\n *\r\n * Or standalone\r\n *\r\n * ``` js\r\n * angular.module('myApp', ['mobile-angular-ui.gestures.transform']);\r\n * ```\r\n *\r\n * Say we have an element with applyed css:\r\n *\r\n * ``` html\r\n * <div class='myelem'></div>\r\n * ```\r\n *\r\n * ``` css\r\n * .myelem {\r\n *   transform: translate(12px) rotate(20deg);\r\n * }\r\n * ```\r\n *\r\n * Then you can use `$transform` like this:\r\n *\r\n * ``` js\r\n *   t = $transform.get(e);\r\n *   t.rotationZ += 15;\r\n *   t.translateX += 1;\r\n *   $transform.set(e, t);\r\n * ```\r\n *\r\n * ### `$transform` service API\r\n *\r\n * #### `$transform.fromCssMatrix(cssMatrixString) -> transform`\r\n *\r\n * Returns a decomposition of the transform matrix `cssMatrixString`.\r\n * NOTE: 2d matrices are translated to 3d matrices before any other operation.\r\n *\r\n * #### `$transform.toCss(decomposedTransform)`\r\n *\r\n * Recompose a css string from `decomposedTransform`.\r\n *\r\n * Transforms are recomposed as a composition of:\r\n *\r\n * ``` css\r\n * matrix3d(1,0,0,0, 0,1,0,0, 0,0,1,0, perspective[0], perspective[1], perspective[2], perspective[3])\r\n * translate3d(translation[0], translation[1], translation[2])\r\n * rotateX(rotation[0]) rotateY(rotation[1]) rotateZ(rotation[2])\r\n * matrix3d(1,0,0,0, 0,1,0,0, 0,skew[2],1,0, 0,0,0,1)\r\n * matrix3d(1,0,0,0, 0,1,0,0, skew[1],0,1,0, 0,0,0,1)\r\n * matrix3d(1,0,0,0, skew[0],1,0,0, 0,0,1,0, 0,0,0,1)\r\n * scale3d(scale[0], scale[1], scale[2])\r\n * ```\r\n *\r\n * #### `$transform.get(e) -> transform`\r\n *\r\n * Returns a decomposition of the transform matrix applied to `e`.\r\n *\r\n * #### `$transform.set(element, transform)`\r\n *\r\n * If transform is a string just set it for element `element`. Otherwise is considered as a\r\n * decomposed transform and is recomposed with `$transform.toCss` and then set to element.\r\n *\r\n * ### The decomposed transform object\r\n *\r\n * Result of transform matrix decomposition is an object with the following properties:\r\n *\r\n * ```\r\n * translateX\r\n * translateY\r\n * translateZ\r\n * perspectiveX\r\n * perspectiveY\r\n * perspectiveZ\r\n * perspectiveW\r\n * scaleX\r\n * scaleY\r\n * scaleZ\r\n * rotateX\r\n * rotateY\r\n * rotateZ\r\n * skewXY\r\n * skewXZ\r\n * skewYZ\r\n * ```\r\n */\r\n(function() {\r\n  'use strict';\r\n\r\n  var module = angular.module('mobile-angular-ui.gestures.transform', []);\r\n\r\n  module.factory('$transform', function() {\r\n\r\n    /* ==============================================================\r\n    =            Cross-Browser Property Prefix Handling            =\r\n    ==============================================================*/\r\n\r\n    // Cross-Browser style properties\r\n    var cssPrefix;\r\n    var transformProperty;\r\n    var styleProperty;\r\n    var prefixes = ['', 'webkit', 'Moz', 'O', 'ms'];\r\n    var d = document.createElement('div');\r\n\r\n    for (var i = 0; i < prefixes.length; i++) {\r\n      var prefix = prefixes[i];\r\n      if ((prefix + 'Perspective') in d.style) {\r\n        cssPrefix = (prefix === '' ? '' : '-' + prefix.toLowerCase() + '-');\r\n        styleProperty = prefix + (prefix === '' ? 'transform' : 'Transform');\r\n        transformProperty = cssPrefix + 'transform';\r\n        break;\r\n      }\r\n    }\r\n\r\n    d = null;\r\n\r\n    // return current element transform matrix in a cross-browser way\r\n    var getElementTransformProperty = function(e) {\r\n      e = e.length ? e[0] : e;\r\n      var tr = window\r\n        .getComputedStyle(e, null)\r\n        .getPropertyValue(transformProperty);\r\n      return tr;\r\n    };\r\n\r\n    // set current element transform matrix in a cross-browser way\r\n    var setElementTransformProperty = function(elem, value) {\r\n      elem = elem.length ? elem[0] : elem;\r\n      elem.style[styleProperty] = value;\r\n    };\r\n\r\n    /* ======================================================\r\n    =            Transform Matrix Decomposition            =\r\n    ======================================================*/\r\n\r\n    var SMALL_NUMBER = 1.e-7;\r\n\r\n    var rad2deg = function(angle) {\r\n      return angle * 180 / Math.PI;\r\n    };\r\n\r\n    var sqrt = Math.sqrt;\r\n    var asin = Math.asin;\r\n    var atan2 = Math.atan2;\r\n    var cos = Math.cos;\r\n    var abs = Math.abs;\r\n    var floor = Math.floor;\r\n\r\n    var cloneMatrix = function(m) {\r\n      var res = [[], [], [], []];\r\n      for (var i = 0; i < m.length; i++) {\r\n        for (var j = 0; j < m[i].length; j++) {\r\n          res[i][j] = m[i][j];\r\n        }\r\n      }\r\n      return res;\r\n    };\r\n\r\n    var determinant2x2 = function(a, b, c, d) {\r\n      return a * d - b * c;\r\n    };\r\n\r\n    var determinant3x3 = function(a1, a2, a3, b1, b2, b3, c1, c2, c3) {\r\n      return a1 * determinant2x2(b2, b3, c2, c3) - b1 * determinant2x2(a2, a3, c2, c3) + c1 * determinant2x2(a2, a3, b2, b3);\r\n    };\r\n\r\n    var determinant4x4 = function(m) {\r\n      var a1 = m[0][0];\r\n      var b1 = m[0][1];\r\n      var c1 = m[0][2];\r\n      var d1 = m[0][3];\r\n      var a2 = m[1][0];\r\n      var b2 = m[1][1];\r\n      var c2 = m[1][2];\r\n      var d2 = m[1][3];\r\n      var a3 = m[2][0];\r\n      var b3 = m[2][1];\r\n      var c3 = m[2][2];\r\n      var d3 = m[2][3];\r\n      var a4 = m[3][0];\r\n      var b4 = m[3][1];\r\n      var c4 = m[3][2];\r\n      var d4 = m[3][3];\r\n      return a1 * determinant3x3(b2, b3, b4, c2, c3, c4, d2, d3, d4) -\r\n              b1 * determinant3x3(a2, a3, a4, c2, c3, c4, d2, d3, d4) +\r\n              c1 * determinant3x3(a2, a3, a4, b2, b3, b4, d2, d3, d4) -\r\n              d1 * determinant3x3(a2, a3, a4, b2, b3, b4, c2, c3, c4);\r\n    };\r\n\r\n    var adjoint = function(m) {\r\n      var res = [[], [], [], []];\r\n      var a1 = m[0][0];\r\n      var b1 = m[0][1];\r\n      var c1 = m[0][2];\r\n      var d1 = m[0][3];\r\n      var a2 = m[1][0];\r\n      var b2 = m[1][1];\r\n      var c2 = m[1][2];\r\n      var d2 = m[1][3];\r\n      var a3 = m[2][0];\r\n      var b3 = m[2][1];\r\n      var c3 = m[2][2];\r\n      var d3 = m[2][3];\r\n      var a4 = m[3][0];\r\n      var b4 = m[3][1];\r\n      var c4 = m[3][2];\r\n      var d4 = m[3][3];\r\n\r\n      res[0][0] = determinant3x3(b2, b3, b4, c2, c3, c4, d2, d3, d4);\r\n      res[1][0] = -determinant3x3(a2, a3, a4, c2, c3, c4, d2, d3, d4);\r\n      res[2][0] = determinant3x3(a2, a3, a4, b2, b3, b4, d2, d3, d4);\r\n      res[3][0] = -determinant3x3(a2, a3, a4, b2, b3, b4, c2, c3, c4);\r\n      res[0][1] = -determinant3x3(b1, b3, b4, c1, c3, c4, d1, d3, d4);\r\n      res[1][1] = determinant3x3(a1, a3, a4, c1, c3, c4, d1, d3, d4);\r\n      res[2][1] = -determinant3x3(a1, a3, a4, b1, b3, b4, d1, d3, d4);\r\n      res[3][1] = determinant3x3(a1, a3, a4, b1, b3, b4, c1, c3, c4);\r\n      res[0][2] = determinant3x3(b1, b2, b4, c1, c2, c4, d1, d2, d4);\r\n      res[1][2] = -determinant3x3(a1, a2, a4, c1, c2, c4, d1, d2, d4);\r\n      res[2][2] = determinant3x3(a1, a2, a4, b1, b2, b4, d1, d2, d4);\r\n      res[3][2] = -determinant3x3(a1, a2, a4, b1, b2, b4, c1, c2, c4);\r\n      res[0][3] = -determinant3x3(b1, b2, b3, c1, c2, c3, d1, d2, d3);\r\n      res[1][3] = determinant3x3(a1, a2, a3, c1, c2, c3, d1, d2, d3);\r\n      res[2][3] = -determinant3x3(a1, a2, a3, b1, b2, b3, d1, d2, d3);\r\n      res[3][3] = determinant3x3(a1, a2, a3, b1, b2, b3, c1, c2, c3);\r\n\r\n      return res;\r\n    };\r\n\r\n    var inverse = function(m) {\r\n      var res = adjoint(m);\r\n      var det = determinant4x4(m);\r\n      if (abs(det) < SMALL_NUMBER) {\r\n        return false;\r\n      }\r\n\r\n      for (var i = 0; i < 4; i++) {\r\n        for (var j = 0; j < 4; j++) {\r\n          res[i][j] /= det;\r\n        }\r\n      }\r\n      return res;\r\n    };\r\n\r\n    var transposeMatrix4 = function(m) {\r\n      var res = [[], [], [], []];\r\n      for (var i = 0; i < 4; i++) {\r\n        for (var j = 0; j < 4; j++) {\r\n          res[i][j] = m[j][i];\r\n        }\r\n      }\r\n      return res;\r\n    };\r\n\r\n    var v4MulPointByMatrix = function(p, m) {\r\n      var res = [];\r\n\r\n      res[0] = (p[0] * m[0][0]) + (p[1] * m[1][0]) +\r\n                  (p[2] * m[2][0]) + (p[3] * m[3][0]);\r\n      res[1] = (p[0] * m[0][1]) + (p[1] * m[1][1]) +\r\n                  (p[2] * m[2][1]) + (p[3] * m[3][1]);\r\n      res[2] = (p[0] * m[0][2]) + (p[1] * m[1][2]) +\r\n                  (p[2] * m[2][2]) + (p[3] * m[3][2]);\r\n      res[3] = (p[0] * m[0][3]) + (p[1] * m[1][3]) +\r\n                  (p[2] * m[2][3]) + (p[3] * m[3][3]);\r\n\r\n      return res;\r\n    };\r\n\r\n    var v3Length = function(a) {\r\n      return sqrt((a[0] * a[0]) + (a[1] * a[1]) + (a[2] * a[2]));\r\n    };\r\n\r\n    var v3Scale = function(v, desiredLength) {\r\n      var res = [];\r\n      var len = v3Length(v);\r\n      if (len !== 0) {\r\n        var l = desiredLength / len;\r\n        res[0] *= l;\r\n        res[1] *= l;\r\n        res[2] *= l;\r\n      }\r\n      return res;\r\n    };\r\n\r\n    var v3Dot = function(a, b) {\r\n      return (a[0] * b[0]) + (a[1] * b[1]) + (a[2] * b[2]);\r\n    };\r\n\r\n    var v3Combine = function(a, b, ascl, bscl) {\r\n      var res = [];\r\n      res[0] = (ascl * a[0]) + (bscl * b[0]);\r\n      res[1] = (ascl * a[1]) + (bscl * b[1]);\r\n      res[2] = (ascl * a[2]) + (bscl * b[2]);\r\n      return res;\r\n    };\r\n\r\n    var v3Cross = function(a, b) {\r\n      var res = [];\r\n      res[0] = (a[1] * b[2]) - (a[2] * b[1]);\r\n      res[1] = (a[2] * b[0]) - (a[0] * b[2]);\r\n      res[2] = (a[0] * b[1]) - (a[1] * b[0]);\r\n      return res;\r\n    };\r\n\r\n    var decompose = function(mat) {\r\n      var result = {};\r\n      var localMatrix = cloneMatrix(mat);\r\n      var i;\r\n      var j;\r\n\r\n      // Normalize the matrix.\r\n      if (localMatrix[3][3] === 0) {\r\n        return false;\r\n      }\r\n\r\n      for (i = 0; i < 4; i++) {\r\n        for (j = 0; j < 4; j++) {\r\n          localMatrix[i][j] /= localMatrix[3][3];\r\n        }\r\n      }\r\n\r\n      var perspectiveMatrix = cloneMatrix(localMatrix);\r\n      for (i = 0; i < 3; i++) {\r\n        perspectiveMatrix[i][3] = 0;\r\n      }\r\n      perspectiveMatrix[3][3] = 1;\r\n\r\n      if (determinant4x4(perspectiveMatrix) === 0) {\r\n        return false;\r\n      }\r\n\r\n      // First, isolate perspective.  This is the messiest.\r\n      if (localMatrix[0][3] !== 0 || localMatrix[1][3] !== 0 || localMatrix[2][3] !== 0) {\r\n        // rightHandSide is the right hand side of the equation.\r\n        var rightHandSide = [];\r\n        rightHandSide[0] = localMatrix[0][3];\r\n        rightHandSide[1] = localMatrix[1][3];\r\n        rightHandSide[2] = localMatrix[2][3];\r\n        rightHandSide[3] = localMatrix[3][3];\r\n\r\n        // Solve the equation by inverting perspectiveMatrix and multiplying\r\n        // rightHandSide by the inverse. (This is the easiest way, not\r\n        // necessarily the best.)\r\n        var inversePerspectiveMatrix = inverse(perspectiveMatrix);\r\n        var transposedInversePerspectiveMatrix = transposeMatrix4(inversePerspectiveMatrix);\r\n        var perspectivePoint = v4MulPointByMatrix(rightHandSide, transposedInversePerspectiveMatrix);\r\n\r\n        result.perspectiveX = perspectivePoint[0];\r\n        result.perspectiveY = perspectivePoint[1];\r\n        result.perspectiveZ = perspectivePoint[2];\r\n        result.perspectiveW = perspectivePoint[3];\r\n\r\n        // Clear the perspective partition\r\n        localMatrix[0][3] = localMatrix[1][3] = localMatrix[2][3] = 0;\r\n        localMatrix[3][3] = 1;\r\n      } else {\r\n        // No perspective.\r\n        result.perspectiveX = result.perspectiveY = result.perspectiveZ = 0;\r\n        result.perspectiveW = 1;\r\n      }\r\n\r\n      // Next take care of translation (easy).\r\n      result.translateX = localMatrix[3][0];\r\n      localMatrix[3][0] = 0;\r\n      result.translateY = localMatrix[3][1];\r\n      localMatrix[3][1] = 0;\r\n      result.translateZ = localMatrix[3][2];\r\n      localMatrix[3][2] = 0;\r\n\r\n      // Now get scale and shear.\r\n      var row = [[], [], []];\r\n      var pdum3;\r\n\r\n      for (i = 0; i < 3; i++) {\r\n        row[i][0] = localMatrix[i][0];\r\n        row[i][1] = localMatrix[i][1];\r\n        row[i][2] = localMatrix[i][2];\r\n      }\r\n\r\n      // Compute X scale factor and normalize first row.\r\n      result.scaleX = v3Length(row[0]);\r\n      v3Scale(row[0], 1.0);\r\n\r\n      // Compute XY shear factor and make 2nd row orthogonal to 1st.\r\n      result.skewXY = v3Dot(row[0], row[1]);\r\n      v3Combine(row[1], row[0], row[1], 1.0, -result.skewXY);\r\n\r\n      // Now, compute Y scale and normalize 2nd row.\r\n      result.scaleY = v3Length(row[1]);\r\n      v3Scale(row[1], 1.0);\r\n      result.skewXY /= result.scaleY;\r\n\r\n      // Compute XZ and YZ shears, orthogonalize 3rd row.\r\n      result.skewXZ = v3Dot(row[0], row[2]);\r\n      v3Combine(row[2], row[0], row[2], 1.0, -result.skewXZ);\r\n      result.skewYZ = v3Dot(row[1], row[2]);\r\n      v3Combine(row[2], row[1], row[2], 1.0, -result.skewYZ);\r\n\r\n      // Next, get Z scale and normalize 3rd row.\r\n      result.scaleZ = v3Length(row[2]);\r\n      v3Scale(row[2], 1.0);\r\n      result.skewXZ /= result.scaleZ;\r\n      result.skewYZ /= result.scaleZ;\r\n\r\n      // At this point, the matrix (in rows[]) is orthonormal.\r\n      // Check for a coordinate system flip.  If the determinant\r\n      // is -1, then negate the matrix and the scaling factors.\r\n      pdum3 = v3Cross(row[1], row[2]);\r\n\r\n      if (v3Dot(row[0], pdum3) < 0) {\r\n        for (i = 0; i < 3; i++) {\r\n          result.scaleX *= -1;\r\n          row[i][0] *= -1;\r\n          row[i][1] *= -1;\r\n          row[i][2] *= -1;\r\n        }\r\n      }\r\n\r\n      // Rotation (angles smaller then SMALL_NUMBER are zeroed)\r\n      result.rotateY = rad2deg(asin(-row[0][2])) || 0;\r\n      if (cos(result.rotateY) === 0) {\r\n        result.rotateX = rad2deg(atan2(-row[2][0], row[1][1])) || 0;\r\n        result.rotateZ = 0;\r\n      } else {\r\n        result.rotateX = rad2deg(atan2(row[1][2], row[2][2])) || 0;\r\n        result.rotateZ = rad2deg(atan2(row[0][1], row[0][0])) || 0;\r\n      }\r\n\r\n      return result;\r\n    };\r\n\r\n    /* =========================================\r\n    =            Factory interface            =\r\n    =========================================*/\r\n\r\n    var fCom = function(n, def) {\r\n      // avoid scientific notation with toFixed\r\n      var val = (n || def || 0);\r\n      return String(val.toFixed(20));\r\n    };\r\n\r\n    var fPx = function(n, def) {\r\n      return fCom(n, def) + 'px';\r\n    };\r\n\r\n    var fDeg = function(n, def) {\r\n      return fCom(n, def) + 'deg';\r\n    };\r\n\r\n    return {\r\n      fromCssMatrix: function(tr) {\r\n        var M = [[1, 0, 0, 0], [0, 1, 0, 0], [0, 0, 1, 0], [0, 0, 0, 1]];\r\n\r\n        // Just returns identity in case no transform is setup for the element\r\n        if (tr && tr !== 'none') {\r\n          var elems = tr.split('(')[1].split(')')[0].split(',').map(Number);\r\n\r\n          // Is a 2d transform: matrix(a, b, c, d, tx, ty) is a shorthand\r\n          // for matrix3d(a, b, 0, 0, c, d, 0, 0, 0, 0, 1, 0, tx, ty, 0, 1)\r\n          if (tr.match(/^matrix\\(/)) {\r\n            M[0][0] = elems[0];\r\n            M[1][0] = elems[1];\r\n            M[0][1] = elems[2];\r\n            M[1][1] = elems[3];\r\n            M[3][0] = elems[4];\r\n            M[3][1] = elems[5];\r\n\r\n          // Is a 3d transform, set elements by rows\r\n          } else {\r\n            for (var i = 0; i < 16; i++) {\r\n              var row = floor(i / 4);\r\n              var col = i % 4;\r\n              M[row][col] = elems[i];\r\n            }\r\n          }\r\n        }\r\n        return decompose(M);\r\n      },\r\n\r\n      toCss: function(t) {\r\n        //\r\n        // Transforms are recomposed as a composition of:\r\n        //\r\n        // matrix3d(1,0,0,0, 0,1,0,0, 0,0,1,0, perspective[0], perspective[1], perspective[2], perspective[3])\r\n        // translate3d(translation[0], translation[1], translation[2])\r\n        // rotateX(rotation[0]) rotateY(rotation[1]) rotateZ(rotation[2])\r\n        // matrix3d(1,0,0,0, 0,1,0,0, 0,skew[2],1,0, 0,0,0,1)\r\n        // matrix3d(1,0,0,0, 0,1,0,0, skew[1],0,1,0, 0,0,0,1)\r\n        // matrix3d(1,0,0,0, skew[0],1,0,0, 0,0,1,0, 0,0,0,1)\r\n        // scale3d(scale[0], scale[1], scale[2])\r\n        //\r\n\r\n        var perspective = [\r\n          fCom(t.perspectiveX),\r\n          fCom(t.perspectiveY),\r\n          fCom(t.perspectiveZ),\r\n          fCom(t.perspectiveW, 1)\r\n        ];\r\n        var translate = [\r\n          fPx(t.translateX),\r\n          fPx(t.translateY),\r\n          fPx(t.translateZ)\r\n        ];\r\n        var scale = [\r\n          fCom(t.scaleX),\r\n          fCom(t.scaleY),\r\n          fCom(t.scaleZ)\r\n        ];\r\n        var rotation = [\r\n          fDeg(t.rotateX),\r\n          fDeg(t.rotateY),\r\n          fDeg(t.rotateZ)\r\n        ];\r\n        var skew = [\r\n          fCom(t.skewXY),\r\n          fCom(t.skewXZ),\r\n          fCom(t.skewYZ)\r\n        ];\r\n\r\n        return [\r\n          'matrix3d(1,0,0,0,0,1,0,0,0,0,1,0,' + perspective.join(',') + ')',\r\n          'translate3d(' + translate.join(',') + ')',\r\n          'rotateX(' + rotation[0] + ') rotateY(' + rotation[1] + ') rotateZ(' + rotation[2] + ')',\r\n          'matrix3d(1,0,0,0,0,1,0,0,0,' + skew[2] + ',1,0,0,0,0,1)',\r\n          'matrix3d(1,0,0,0,0,1,0,0,' + skew[1] + ',0,1,0,0,0,0,1)',\r\n          'matrix3d(1,0,0,0,' + skew[0] + ',1,0,0,0,0,1,0,0,0,0,1)',\r\n          'scale3d(' + scale.join(',') + ')'\r\n        ].join(' ');\r\n      },\r\n\r\n      //\r\n      // Returns a decomposition of the transform matrix applied\r\n      // to `e`;\r\n      //\r\n      // NOTE: 2d matrices are translated to 3d matrices\r\n      //       before any other operation.\r\n      //\r\n      get: function(e) {\r\n        return this.fromCssMatrix(getElementTransformProperty(e));\r\n      },\r\n\r\n      // Recompose a transform from decomposition `t` and apply it to element `e`\r\n      set: function(e, t) {\r\n        var str = (typeof t === 'string') ? t : this.toCss(t);\r\n        setElementTransformProperty(e, str);\r\n      }\r\n    };\r\n  });\r\n})();\r\n","/**\r\n * @module mobile-angular-ui.gestures\r\n * @position 100\r\n * @description\r\n *\r\n * It has directives and services to support `touch`, `swipe` and `drag` gestures.\r\n *\r\n * It does not need any `.css` to work.\r\n *\r\n * <div class=\"alert alert-warning\">\r\n * <p>\r\n * <i class=\"fa fa-warning\"></i> This module will not work with `ngTouch`\r\n * cause it is intended, among offering more features, to be a drop-in\r\n * replacement for it.\r\n * </p>\r\n * <p>\r\n * Be aware that `ngTouch` is still not playing well with `fastclick.js` and its usage with `mobile-angular-ui` is currently discouraged anyway.\r\n * </p>\r\n * </div>\r\n *\r\n * ## Usage\r\n *\r\n * `.gestures` module is not required by `mobile-angular-ui` module. It has no\r\n * dependency on other modules and is intended to be used alone with any other\r\n * angular framework.\r\n *\r\n * You have to include `mobile-angular-ui.gestures.min.js` to your project in order to use it. Ie.\r\n *\r\n * ``` html\r\n * <script src=\"/dist/js/mobile-angular-ui.gestures.min.js\"></script>\r\n * ```\r\n *\r\n * ``` js\r\n * angular.module('myApp', ['mobile-angular-ui.gestures']);\r\n * ```\r\n */\r\n(function() {\r\n  'use strict';\r\n\r\n  angular.module('mobile-angular-ui.gestures', [\r\n    'mobile-angular-ui.gestures.drag',\r\n    'mobile-angular-ui.gestures.swipe',\r\n    'mobile-angular-ui.gestures.transform'\r\n  ]);\r\n})();\r\n"],"sourceRoot":"/source/"}